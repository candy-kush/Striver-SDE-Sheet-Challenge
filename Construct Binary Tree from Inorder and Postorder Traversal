/************************************************************
   
   Following is the TreeNode class structure
   
   class TreeNode<T>
   { 
   public:
        T data; 
        TreeNode<T> *left;
        TreeNode<T> *right;
   
        TreeNode(T data) 
  		{ 
            this -> data = data; 
            left = NULL; 
            right = NULL; 
        }
   };
   
   
 ************************************************************/
int search(vector<int> inorder,int start,int end,int key){
    for(int i=start;i<=end;i++){
        if(inorder[i] == key){
            return i;
        }
    }
    return -1;
}
TreeNode<int> *buildTree(vector<int> postOrder, vector<int> inOrder,int start,int end,int &idx){
    if(start > end){
        return NULL;
    }
    int curr = postOrder[idx--];
    TreeNode<int> *node = new TreeNode<int> (curr);
    if(start == end){
        return node;
    }
    int pos = search(inOrder,start,end,curr);
    node->right = buildTree(postOrder,inOrder,pos+1,end,idx);
    node->left = buildTree(postOrder,inOrder,start,pos-1,idx);
    
    return node;
}

TreeNode<int>* getTreeFromPostorderAndInorder(vector<int>& postOrder, vector<int>& inOrder) 
{
	// Write your code here.
    int n = inOrder.size();
    int idx = n-1;
    TreeNode<int> *node = buildTree(postOrder,inOrder,0,n-1,idx);
    return node;
}
